Action: test_1_selenium_create_comment, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26185277', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1312221', ...}
confluence_screen_shots = None

    def test_1_selenium_create_comment(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.create_comment(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:153: in create_comment
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_create_comment - Exception', Exception('Failed measure: selenium_create_comment:write_comment - TimeoutException', TimeoutException('timeout: Timed out receiving message from renderer: 300.000\n  (Session info: headless chrome=86.0.4240.75)', None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_1_selenium_view_blog, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26185277', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1312221', ...}
confluence_screen_shots = None

    def test_1_selenium_view_blog(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.view_blog(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:71: in view_blog
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_view_blog - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b35e220>. \nLocator: ('id', 'title-text')", None, None))

selenium_ui/conftest.py:120: Exception
Action: test_1_selenium_create_page, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26089715', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1106563', ...}
confluence_screen_shots = None

    def test_1_selenium_create_page(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.create_confluence_page(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:109: in create_confluence_page
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_create_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b3299d0>. \nLocator: ('id', 'content-title')", None, None))

selenium_ui/conftest.py:120: Exception
Action: test_1_selenium_view_blog, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26089715', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1106563', ...}
confluence_screen_shots = None

    def test_1_selenium_view_blog(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.view_blog(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:71: in view_blog
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_view_blog - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b32a550>. \nLocator: ('id', 'title-text')", None, None))

selenium_ui/conftest.py:120: Exception
Action: test_1_selenium_view_dashboard, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26089715', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1106563', ...}
confluence_screen_shots = None

    def test_1_selenium_view_dashboard(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.view_dashboard(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:81: in view_dashboard
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_view_dashboard - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b33e5e0>. \nLocator: ('class name', 'update-items')", None, None))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26182915', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '976120', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b2aaf10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26184004', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '982269', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b1eeb80>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25955104', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1081779', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b2fd460>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26107926', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1091735', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b16ca60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25963235', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '381091', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b183940>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8486944', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1082422', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b12d790>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26093662', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '977587', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b158d90>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25823971', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1201009', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b0675e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8628889', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '966077', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b06e490>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26334574', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1448965', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b10fca0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26328288', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '953837', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87afa0940>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25841640', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1198952', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87afa05b0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26104257', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1100798', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aeff310>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26195227', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1113798', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87afb2c70>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26205995', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '979119', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87afe0190>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26201682', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1328645', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aebfc40>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26189816', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1320180', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87adb0cd0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8517785', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1100848', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87add0c70>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26093115', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1313362', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ada0c70>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26089053', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1106319', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87acaba30>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26104292', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '391845', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87acceee0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8502771', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1090096', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ae96a60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26335836', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1205610', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ac80a60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8626188', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1181378', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87abad820>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26097236', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '957861', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ab627c0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8488846', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '38338563', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ab8c190>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26102210', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '953907', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aaaa670>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26114295', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '382172', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aa85bb0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8618703', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '963566', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aa097f0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8489200', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1326684', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ac56760>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26099806', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '962567', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a9e67f0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26112904', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1312024', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a936970>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26201124', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1096227', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a98b070>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26104067', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '961712', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a926550>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26325836', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '978368', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a91da00>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8495821', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1184620', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a82ceb0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25834671', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1183731', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a7ba3a0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25955157', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1100816', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a887b50>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25984099', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '952448', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a88a730>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26319050', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '980367', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a936c10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25837597', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '981559', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b28fd60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25963398', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1102803', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b8ef730>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26201124', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1183089', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b26a820>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26105717', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '969211', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a6ef880>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26193666', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1184125', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b13ed60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8495966', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '969520', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b316f10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25983728', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1096274', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b25f820>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26096864', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1206156', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b2036a0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26197478', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '972589', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b1fc580>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25984345', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1191093', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a6bc8e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26182405', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1109165', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b16c310>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26210602', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1185913', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b1b37f0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8510144', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1098182', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aee9fa0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25984585', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '955459', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87af4fd30>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26198027', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1109193', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87af37fa0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26336511', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1191585', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aecef10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26108800', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '959563', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b0104f0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26336511', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '955665', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b0e5a00>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8498607', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1190949', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b01c7c0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26101966', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1207644', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b094a90>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25722179', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1098087', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ab34250>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26102103', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1100848', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ae34160>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25827753', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1110557', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aaaa9a0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26207392', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '975302', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87abadd90>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25828183', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '966258', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ad6cc10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25719304', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '969252', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87abf93d0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26091929', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '981929', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ae112e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26194038', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1083172', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ac0b190>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26104718', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1107741', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aacaa30>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26104052', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1110520', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a99ae20>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25958962', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1086519', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87ad21880>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25828464', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1186814', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a8fc400>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25975512', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1192045', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a82c2e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26084155', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1099200', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a9fc6a0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26106571', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1083320', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a83f580>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26110385', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '976418', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87aa038e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26323897', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '978322', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b010f10>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26091131', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1113881', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b1dbe80>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26213120', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1089572', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b16cd30>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26086184', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1098588', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a7482b0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26197733', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1110767', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a83f2e0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8620662', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '964493', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a6e7220>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25979950', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1205817', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b40fe80>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25983467', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1101943', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a896a60>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8514666', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1113052', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a83f2b0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25970414', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '973913', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87add03d0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8490916', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '974316', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a6f4340>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '25827753', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '385317', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b3551c0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26094439', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1189616', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a746df0>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8501033', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1187767', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b220880>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26200750', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '1190235', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87b1fc670>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '26213066', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '953789', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a7ce880>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
Action: test_0_selenium_a_login, Error: confluence_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session="21eb4c9077ce1b428f0a32e71be7b3da")>
confluence_datasets = {'blog_id': '8419838', 'blogs': [['8416123', 'CJPDP'], ['8416148', 'PLEB'], ['8416327', 'GSR'], ['8417043', 'CCDI'], ['8418716', 'SOPM'], ['8418929', 'BCBS'], ...], 'custom_pages': [], 'page_id': '954042', ...}
confluence_screen_shots = None

    def test_0_selenium_a_login(confluence_webdriver, confluence_datasets, confluence_screen_shots):
>       modules.login(confluence_webdriver, confluence_datasets)

selenium_ui/confluence_ui.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
selenium_ui/confluence/modules.py:50: in login
    measure()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @functools.wraps(func)
    def wrapper():
        if LOGIN_ACTION_NAME in interaction:
            globals.login_failed = False
        if globals.login_failed:
            pytest.skip(f"login is failed")
        start = time.time()
        error_msg = 'Success'
        full_exception = ''
        try:
            func()
            success = True
        except Exception:
            success = False
            # https://docs.python.org/2/library/sys.html#sys.exc_info
            exc_type, full_exception = sys.exc_info()[:2]
            error_msg = f"Failed measure: {interaction} - {exc_type.__name__}"
        end = time.time()
        timing = str(int((end - start) * 1000))
    
        with open(selenium_results_file, "a+") as jtl_file:
            timestamp = round(time.time() * 1000)
            jtl_file.write(f"{timestamp},{timing},{interaction},,{error_msg},,{success},0,0,0,0,,0\n")
    
        print(f"{timestamp},{timing},{interaction},{error_msg},{success}")
    
        if not success:
            if LOGIN_ACTION_NAME in interaction:
                globals.login_failed = True
>           raise Exception(error_msg, full_exception)
E           Exception: ('Failed measure: selenium_login - Exception', Exception('Failed measure: selenium_login:open_login_page - TimeoutException', TimeoutException("Error in wait_until: Timed out after 20 sec waiting for <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fd87a78ab80>. \nLocator: ('id', 'loginButton')", None, None)))

selenium_ui/conftest.py:120: Exception
